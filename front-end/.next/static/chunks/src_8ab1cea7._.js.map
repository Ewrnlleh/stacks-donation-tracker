{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/nocrest/stacks-donation-tracker/front-end/src/lib/devnet-wallet-context.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nexport interface DevnetWallet {\n  stxAddress: string;\n  label: string;\n  mnemonic: string;\n}\n\nexport interface DevnetWalletContextType {\n  currentWallet: DevnetWallet | null;\n  wallets: DevnetWallet[];\n  setCurrentWallet: (wallet: DevnetWallet | null) => void;\n}\n\nexport const devnetWallets: DevnetWallet[] = [\n  { \n    stxAddress: 'ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM', \n    label: 'Deployer',\n    mnemonic: 'twice kind fence tip hidden tilt action fragile skin nothing glory cousin green tomorrow spring wrist shed math olympic multiply hip blue scout claw'\n  },\n  { \n    stxAddress: 'ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5', \n    label: 'Wallet 1',\n    mnemonic: 'sell invite acquire kitten bamboo drastic jelly vivid peace spawn twice guilt pave pen trash pretty park cube fragile unaware remain midnight betray rebuild'\n  },\n  { \n    stxAddress: 'ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG', \n    label: 'Wallet 2',\n    mnemonic: 'hold excess usual excess ring elephant install account glad dry fragile donkey gaze humble truck breeze nation gasp vacuum limb head keep delay hospital'\n  },\n  { \n    stxAddress: 'ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC', \n    label: 'Wallet 3',\n    mnemonic: 'cycle puppy glare enroll cost improve round trend wrist mushroom scorpion tower claim oppose clever elephant dinosaur eight problem before frozen dune wagon high'\n  },\n  { \n    stxAddress: 'ST2NEB84ASENDXKYGJPQW86YXQCEFEX2ZQPG87ND', \n    label: 'Wallet 4',\n    mnemonic: 'board list obtain sugar hour worth raven scout denial thunder horse logic fury scorpion fold genuine phrase wealth news aim below celery when cabin'\n  },\n];\n\nexport const DevnetWalletContext = createContext<DevnetWalletContextType>({\n  currentWallet: null,\n  wallets: devnetWallets,\n  setCurrentWallet: () => {},\n});\n\nexport const useDevnetWallet = () => useContext(DevnetWalletContext);\n"],"names":[],"mappings":";;;;;AAAA;;;AAcO,MAAM,gBAAgC;IAC3C;QACE,YAAY;QACZ,OAAO;QACP,UAAU;IACZ;IACA;QACE,YAAY;QACZ,OAAO;QACP,UAAU;IACZ;IACA;QACE,YAAY;QACZ,OAAO;QACP,UAAU;IACZ;IACA;QACE,YAAY;QACZ,OAAO;QACP,UAAU;IACZ;IACA;QACE,YAAY;QACZ,OAAO;QACP,UAAU;IACZ;CACD;AAEM,MAAM,oCAAsB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA2B;IACxE,eAAe;IACf,SAAS;IACT,kBAAkB,KAAO;AAC3B;AAEO,MAAM,kBAAkB;;IAAM,OAAA,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AAAmB;GAAtD","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///home/nocrest/stacks-donation-tracker/front-end/src/components/DevnetWalletProvider.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode, useState } from 'react';\nimport { DevnetWalletContext, DevnetWallet, devnetWallets } from '@/lib/devnet-wallet-context';\n\ninterface DevnetWalletProviderProps {\n  children: ReactNode;\n}\n\nexport function DevnetWalletProvider({ children }: DevnetWalletProviderProps) {\n  const [currentWallet, setCurrentWallet] = useState<DevnetWallet>(devnetWallets[0]);\n\n  const handleSetCurrentWallet = (wallet: DevnetWallet | null) => {\n    if (wallet) {\n      setCurrentWallet(wallet);\n    }\n  };\n\n  return (\n    <DevnetWalletContext.Provider\n      value={{\n        currentWallet,\n        wallets: devnetWallets,\n        setCurrentWallet: handleSetCurrentWallet,\n      }}\n    >\n      {children}\n    </DevnetWalletContext.Provider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AASO,SAAS,qBAAqB,EAAE,QAAQ,EAA6B;;IAC1E,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB,4IAAA,CAAA,gBAAa,CAAC,EAAE;IAEjF,MAAM,yBAAyB,CAAC;QAC9B,IAAI,QAAQ;YACV,iBAAiB;QACnB;IACF;IAEA,qBACE,6LAAC,4IAAA,CAAA,sBAAmB,CAAC,QAAQ;QAC3B,OAAO;YACL;YACA,SAAS,4IAAA,CAAA,gBAAa;YACtB,kBAAkB;QACpB;kBAEC;;;;;;AAGP;GApBgB;KAAA","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///home/nocrest/stacks-donation-tracker/front-end/src/context/WalletContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\nimport { AppConfig, UserSession, showConnect, openContractCall } from '@stacks/connect';\nimport { STACKS_MAINNET, STACKS_TESTNET } from '@stacks/network';\nimport { \n  standardPrincipalCV, \n  uintCV, \n  stringUtf8CV,\n  PostConditionMode,\n  AnchorMode\n} from '@stacks/transactions';\n\ninterface WalletContextType {\n  isConnected: boolean;\n  userData: any;\n  userSession: UserSession;\n  connect: () => Promise<void>;\n  disconnect: () => void;\n  createCampaign: (title: string, description: string, targetAmount: number, duration: number) => Promise<void>;\n  donateToCampaign: (campaignId: number, amount: number, message?: string) => Promise<void>;\n  makeDonation?: (campaignId: number, amount: number, message?: string) => Promise<void>;\n  withdrawFunds?: (campaignId: number) => Promise<void>;\n  loading?: boolean;\n  error?: string | null;\n}\n\nconst WalletContext = createContext<WalletContextType | undefined>(undefined);\n\nexport const useWallet = () => {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('useWallet must be used within a WalletProvider');\n  }\n  return context;\n};\n\ninterface WalletProviderProps {\n  children: ReactNode;\n}\n\nconst appConfig = new AppConfig(['store_write', 'publish_data']);\n\nexport const WalletProvider: React.FC<WalletProviderProps> = ({ children }) => {\n  const [userSession] = useState(() => new UserSession({ appConfig }));\n  const [isConnected, setIsConnected] = useState(false);\n  const [userData, setUserData] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Use StacksNetwork with appropriate configuration\n  const network =\n    process.env.NEXT_PUBLIC_NETWORK === 'mainnet'\n      ? STACKS_MAINNET\n      : STACKS_TESTNET;\n  const contractAddress = process.env.NEXT_PUBLIC_CONTRACT_ADDRESS || 'ST3AM1A56AK2C1XAFJ4115ZSV26EB49BVQ10MGCS0';\n  const donationContractName = process.env.NEXT_PUBLIC_DONATION_CONTRACT_NAME || 'donation-tracker-v2';\n\n  useEffect(() => {\n    if (userSession.isSignInPending()) {\n      userSession.handlePendingSignIn().then((userData) => {\n        setUserData(userData);\n        setIsConnected(true);\n      });\n    } else if (userSession.isUserSignedIn()) {\n      setUserData(userSession.loadUserData());\n      setIsConnected(true);\n    }\n  }, [userSession]);\n\n  const connect = async () => {\n    setLoading(true);\n    try {\n      await showConnect({\n        appDetails: {\n          name: 'DeFi Donation Tracker',\n          icon: '/logo.svg',\n        },\n        redirectTo: '/',\n        onFinish: () => {\n          window.location.reload();\n        },\n        userSession,\n      });\n    } catch (err) {\n      console.error('Wallet connection error:', err);\n      setError('Failed to connect wallet');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const disconnect = () => {\n    userSession.signUserOut();\n    setIsConnected(false);\n    setUserData(null);\n    window.location.reload();\n  };\n\n  const createCampaign = async (title: string, description: string, targetAmount: number, duration: number) => {\n    if (!isConnected) throw new Error('Wallet not connected');\n    \n    setLoading(true);\n    try {\n      const targetAmountMicroSTX = Math.floor(targetAmount * 1000000); // Convert STX to microSTX\n      \n      await openContractCall({\n        network,\n        contractAddress,\n        contractName: donationContractName,\n        functionName: 'create-campaign',\n        functionArgs: [\n          stringUtf8CV(title),\n          stringUtf8CV(description),\n          uintCV(targetAmountMicroSTX),\n          uintCV(duration)\n        ],\n        postConditionMode: PostConditionMode.Allow,\n        anchorMode: AnchorMode.Any,\n        onFinish: (data) => {\n          console.log('Campaign created successfully:', data);\n        },\n        onCancel: () => {\n          console.log('Campaign creation cancelled');\n        },\n      });\n    } catch (err) {\n      console.error('Campaign creation error:', err);\n      setError('Failed to create campaign');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const donateToCampaign = async (campaignId: number, amount: number, message?: string) => {\n    if (!isConnected) throw new Error('Wallet not connected');\n    \n    setLoading(true);\n    try {\n      const amountMicroSTX = Math.floor(amount * 1000000); // Convert STX to microSTX\n      \n      await openContractCall({\n        network,\n        contractAddress,\n        contractName: donationContractName,\n        functionName: 'donate-to-campaign',\n        functionArgs: [\n          uintCV(campaignId),\n          uintCV(amountMicroSTX),\n          stringUtf8CV(message || '')\n        ],\n        postConditionMode: PostConditionMode.Allow,\n        anchorMode: AnchorMode.Any,\n        onFinish: (data) => {\n          console.log('Donation successful:', data);\n        },\n        onCancel: () => {\n          console.log('Donation cancelled');\n        },\n      });\n    } catch (err) {\n      console.error('Donation error:', err);\n      setError('Failed to make donation');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const makeDonation = donateToCampaign;\n\n  const withdrawFunds = async (campaignId: number) => {\n    if (!isConnected) throw new Error('Wallet not connected');\n    \n    setLoading(true);\n    try {\n      await openContractCall({\n        network,\n        contractAddress,\n        contractName: donationContractName,\n        functionName: 'withdraw-funds',\n        functionArgs: [uintCV(campaignId)],\n        postConditionMode: PostConditionMode.Allow,\n        anchorMode: AnchorMode.Any,\n        onFinish: (data) => {\n          console.log('Withdrawal successful:', data);\n        },\n        onCancel: () => {\n          console.log('Withdrawal cancelled');\n        },\n      });\n    } catch (err) {\n      console.error('Withdrawal error:', err);\n      setError('Failed to withdraw funds');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const value: WalletContextType = {\n    isConnected,\n    userData,\n    userSession,\n    connect,\n    disconnect,\n    createCampaign,\n    donateToCampaign,\n    makeDonation,\n    withdrawFunds,\n    loading,\n    error,\n  };\n\n  return (\n    <WalletContext.Provider value={value}>\n      {children}\n    </WalletContext.Provider>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///home/nocrest/stacks-donation-tracker/front-end/src/components/ui/Providers.tsx"],"sourcesContent":["\"use client\";\n\nimport { DevnetWalletProvider } from \"../DevnetWalletProvider\";\nimport { WalletProvider } from \"@/context/WalletContext\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\n// import { HiroWalletProvider } from \"../HiroWalletProvider\"; // Temporarily disabled due to @stacks/connect dependency issues\n\nconst queryClient = new QueryClient();\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <WalletProvider>\n        {/* <HiroWalletProvider> */}\n          <DevnetWalletProvider>{children}</DevnetWalletProvider>\n        {/* </HiroWalletProvider> */}\n      </WalletProvider>\n    </QueryClientProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAJA;;;;;AAKA,+HAA+H;AAE/H,MAAM,cAAc,IAAI,gLAAA,CAAA,cAAW;AAE5B,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBACE,6LAAC,yLAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAC3B,cAAA,6LAAC,mIAAA,CAAA,iBAAc;sBAEX,cAAA,6LAAC,6IAAA,CAAA,uBAAoB;0BAAE;;;;;;;;;;;;;;;;AAKjC;KAVgB","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///home/nocrest/stacks-donation-tracker/front-end/src/components/DevnetWalletButton.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { useDevnetWallet, devnetWallets } from '@/lib/devnet-wallet-context';\n\ninterface DevnetWalletButtonProps {\n  className?: string;\n}\n\nexport const DevnetWalletButton: React.FC<DevnetWalletButtonProps> = ({ \n  className = '' \n}) => {\n  const { currentWallet, setCurrentWallet } = useDevnetWallet();\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  const handleWalletSelect = (wallet: typeof devnetWallets[0]) => {\n    setCurrentWallet(wallet);\n    setShowDropdown(false);\n  };\n\n  const handleDisconnect = () => {\n    setCurrentWallet(null);\n    setShowDropdown(false);\n  };\n\n  return (\n    <div className=\"relative\">\n      <button\n        onClick={() => setShowDropdown(!showDropdown)}\n        className={`px-4 py-2 rounded-lg font-medium transition-colors duration-200 ${\n          currentWallet\n            ? 'bg-green-500 hover:bg-green-600 text-white'\n            : 'bg-blue-500 hover:bg-blue-600 text-white'\n        } ${className}`}\n      >\n        {currentWallet \n          ? `${currentWallet.label} (${currentWallet.stxAddress.slice(0, 6)}...${currentWallet.stxAddress.slice(-4)})` \n          : 'Connect Devnet Wallet'\n        }\n      </button>\n\n      {showDropdown && (\n        <div className=\"absolute top-full left-0 mt-2 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-50\">\n          <div className=\"p-2\">\n            {devnetWallets.map((wallet) => (\n              <button\n                key={wallet.stxAddress}\n                onClick={() => handleWalletSelect(wallet)}\n                className=\"w-full text-left px-3 py-2 rounded hover:bg-gray-100 text-sm\"\n              >\n                <div className=\"font-medium\">{wallet.label}</div>\n                <div className=\"text-gray-500 text-xs\">{wallet.stxAddress}</div>\n              </button>\n            ))}\n            {currentWallet && (\n              <>\n                <hr className=\"my-2\" />\n                <button\n                  onClick={handleDisconnect}\n                  className=\"w-full text-left px-3 py-2 rounded hover:bg-red-50 text-red-600 text-sm\"\n                >\n                  Disconnect\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DevnetWalletButton;\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AASO,MAAM,qBAAwD,CAAC,EACpE,YAAY,EAAE,EACf;;IACC,MAAM,EAAE,aAAa,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,4IAAA,CAAA,kBAAe,AAAD;IAC1D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,qBAAqB,CAAC;QAC1B,iBAAiB;QACjB,gBAAgB;IAClB;IAEA,MAAM,mBAAmB;QACvB,iBAAiB;QACjB,gBAAgB;IAClB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,SAAS,IAAM,gBAAgB,CAAC;gBAChC,WAAW,CAAC,gEAAgE,EAC1E,gBACI,+CACA,2CACL,CAAC,EAAE,WAAW;0BAEd,gBACG,GAAG,cAAc,KAAK,CAAC,EAAE,EAAE,cAAc,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,cAAc,UAAU,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAC1G;;;;;;YAIL,8BACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;wBACZ,4IAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,CAAC,uBAClB,6LAAC;gCAEC,SAAS,IAAM,mBAAmB;gCAClC,WAAU;;kDAEV,6LAAC;wCAAI,WAAU;kDAAe,OAAO,KAAK;;;;;;kDAC1C,6LAAC;wCAAI,WAAU;kDAAyB,OAAO,UAAU;;;;;;;+BALpD,OAAO,UAAU;;;;;wBAQzB,+BACC;;8CACE,6LAAC;oCAAG,WAAU;;;;;;8CACd,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;AAUjB;GA7Da;;QAGiC,4IAAA,CAAA,kBAAe;;;KAHhD;uCA+DE","debugId":null}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":["file:///home/nocrest/stacks-donation-tracker/front-end/src/components/ConnectWalletButton.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface ConnectWalletButtonProps {\n  className?: string;\n  children?: React.ReactNode;\n  variant?: 'primary' | 'secondary';\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const ConnectWalletButton: React.FC<ConnectWalletButtonProps> = ({\n  className = '',\n  children = 'Connect Wallet',\n  variant = 'primary',\n  size = 'md',\n  ...props\n}) => {\n  const handleClick = () => {\n    // Simplified wallet connection for now\n    console.log('Connect wallet clicked');\n  };\n\n  const baseClasses = 'font-medium rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2';\n  \n  const variantClasses = {\n    primary: 'bg-blue-500 hover:bg-blue-600 text-white focus:ring-blue-500',\n    secondary: 'bg-gray-200 hover:bg-gray-300 text-gray-900 focus:ring-gray-500',\n  };\n\n  const sizeClasses = {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-base',\n    lg: 'px-6 py-3 text-lg',\n  };\n\n  const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;\n\n  return (\n    <button\n      className={classes}\n      onClick={handleClick}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default ConnectWalletButton;\n"],"names":[],"mappings":";;;;;AAAA;;AAWO,MAAM,sBAA0D,CAAC,EACtE,YAAY,EAAE,EACd,WAAW,gBAAgB,EAC3B,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,GAAG,OACJ;IACC,MAAM,cAAc;QAClB,uCAAuC;QACvC,QAAQ,GAAG,CAAC;IACd;IAEA,MAAM,cAAc;IAEpB,MAAM,iBAAiB;QACrB,SAAS;QACT,WAAW;IACb;IAEA,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,MAAM,UAAU,GAAG,YAAY,CAAC,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW;IAE7F,qBACE,6LAAC;QACC,WAAW;QACX,SAAS;QACR,GAAG,KAAK;kBAER;;;;;;AAGP;KApCa;uCAsCE","debugId":null}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":["file:///home/nocrest/stacks-donation-tracker/front-end/src/components/Navbar.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { DevnetWalletButton } from \"./DevnetWalletButton\";\nimport { ConnectWalletButton } from \"./ConnectWalletButton\";\n\nexport const Navbar = () => {\n  // For now, let's just use ConnectWalletButton\n  const isDev = process.env.NODE_ENV === 'development';\n\n  return (\n    <nav className=\"bg-white shadow-sm\">\n      <div className=\"container mx-auto max-w-7xl\">\n        <div className=\"flex justify-between h-16 items-center px-4\">\n          <div className=\"flex items-center\">\n            <div className=\"bg-white rounded-md border-2 border-gray-700 text-xl font-bold w-12 h-12 flex justify-center items-center text-gray-900\">\n              ♦\n            </div>\n            <Link href=\"/\" className=\"no-underline\">\n              <div className=\"text-lg font-bold text-gray-900 ml-4\">\n                Donation Tracker\n              </div>\n            </Link>\n          </div>\n          <div className=\"flex items-center gap-4\">\n            {isDev ? (\n              <DevnetWalletButton />\n            ) : (\n              <ConnectWalletButton />\n            )}\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n"],"names":[],"mappings":";;;AAQgB;;AANhB;AACA;AACA;AAJA;;;;;AAMO,MAAM,SAAS;IACpB,8CAA8C;IAC9C,MAAM,QAAQ,oDAAyB;IAEvC,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CAA0H;;;;;;0CAGzI,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAI,WAAU;0CACvB,cAAA,6LAAC;oCAAI,WAAU;8CAAuC;;;;;;;;;;;;;;;;;kCAK1D,6LAAC;wBAAI,WAAU;kCACZ,qDACC,6LAAC,2IAAA,CAAA,qBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;AASjC;KA7Ba","debugId":null}}]
}